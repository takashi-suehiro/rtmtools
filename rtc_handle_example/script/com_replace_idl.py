# Python stubs generated by omniidl from com_replace.idl

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA

_omnipy.checkVersion(3,0, __file__)


#
# Start of module "_GlobalIDL"
#
__name__ = "_GlobalIDL"
_0__GlobalIDL = omniORB.openModule("_GlobalIDL", r"com_replace.idl")
_0__GlobalIDL__POA = omniORB.openModule("_GlobalIDL__POA", r"com_replace.idl")


# interface ComReplace
_0__GlobalIDL._d_ComReplace = (omniORB.tcInternal.tv_objref, "IDL:ComReplace:1.0", "ComReplace")
omniORB.typeMapping["IDL:ComReplace:1.0"] = _0__GlobalIDL._d_ComReplace
_0__GlobalIDL.ComReplace = omniORB.newEmptyClass()
class ComReplace :
    _NP_RepositoryId = _0__GlobalIDL._d_ComReplace[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0__GlobalIDL.ComReplace = ComReplace
_0__GlobalIDL._tc_ComReplace = omniORB.tcInternal.createTypeCode(_0__GlobalIDL._d_ComReplace)
omniORB.registerType(ComReplace._NP_RepositoryId, _0__GlobalIDL._d_ComReplace, _0__GlobalIDL._tc_ComReplace)

# ComReplace operations and attributes
ComReplace._d_replace_count = ((), (omniORB.tcInternal.tv_long, ), None)

# ComReplace object reference
class _objref_ComReplace (CORBA.Object):
    _NP_RepositoryId = ComReplace._NP_RepositoryId

    def __init__(self):
        CORBA.Object.__init__(self)

    def replace_count(self, *args):
        return _omnipy.invoke(self, "replace_count", _0__GlobalIDL.ComReplace._d_replace_count, args)

    __methods__ = ["replace_count"] + CORBA.Object.__methods__

omniORB.registerObjref(ComReplace._NP_RepositoryId, _objref_ComReplace)
_0__GlobalIDL._objref_ComReplace = _objref_ComReplace
del ComReplace, _objref_ComReplace

# ComReplace skeleton
__name__ = "_GlobalIDL__POA"
class ComReplace (PortableServer.Servant):
    _NP_RepositoryId = _0__GlobalIDL.ComReplace._NP_RepositoryId


    _omni_op_d = {"replace_count": _0__GlobalIDL.ComReplace._d_replace_count}

ComReplace._omni_skeleton = ComReplace
_0__GlobalIDL__POA.ComReplace = ComReplace
omniORB.registerSkeleton(ComReplace._NP_RepositoryId, ComReplace)
del ComReplace
__name__ = "_GlobalIDL"

#
# End of module "_GlobalIDL"
#
__name__ = "com_replace_idl"

_exported_modules = ( "_GlobalIDL", )

# The end.
